// Created by Microsoft (R) C/C++ Compiler Version 10.00.40219.01 (be8652a1).
//
// c:\users\vincent\downloads\comet_1b31\src\tlb2h\debug\tlbinf32.tlh
//
// C++ source equivalent of Win32 type library tlbinf32.dll
// compiler-generated file created 07/10/12 at 20:19:55 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace TLI {

//
// Forward references and typedefs
//

struct __declspec(uuid("8b217740-717d-11ce-ab5b-d41203c10000"))
/* LIBID */ __TLI;
enum TliErrors;
enum TypeFlags;
enum ImplTypeFlags;
enum TypeKinds;
enum FuncFlags;
enum VarFlags;
enum SysKinds;
enum LibFlags;
enum InvokeKinds;
enum IDLFlags;
enum ParamFlags;
enum DescKinds;
enum TliVarType;
enum TliSearchTypes;
enum TliWindowTypes;
enum TliItemDataTypes;
struct __declspec(uuid("8b21774b-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ VarTypeInfo;
struct __declspec(uuid("8b217749-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ ParameterInfo;
struct __declspec(uuid("8b21774a-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ Parameters;
struct __declspec(uuid("8b217747-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ MemberInfo;
struct __declspec(uuid("8b217748-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ Members;
struct __declspec(uuid("8b217741-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ InterfaceInfo;
struct __declspec(uuid("8b217750-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ _BaseTypeInfos;
struct __declspec(uuid("8b217742-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ Interfaces;
struct __declspec(uuid("8b217743-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ CoClassInfo;
struct __declspec(uuid("8b217744-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ CoClasses;
struct __declspec(uuid("8b21774d-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ ConstantInfo;
struct __declspec(uuid("8b21774c-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ Constants;
struct __declspec(uuid("8b21774f-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ DeclarationInfo;
struct __declspec(uuid("8b21774e-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ Declarations;
struct __declspec(uuid("8b217751-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ _SearchHelper;
struct /* coclass */ SearchHelper;
struct __declspec(uuid("8b217759-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ TypeInfo;
struct __declspec(uuid("8b217745-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ _TypeLibInfo;
struct /* coclass */ TypeLibInfo;
struct __declspec(uuid("8b217756-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ SearchItem;
struct __declspec(uuid("8b217757-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ SearchResults;
struct __declspec(uuid("8b217758-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ ListBoxNotification;
struct __declspec(uuid("8b21775f-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ CustomSort;
enum TliCustomFilterAction;
struct __declspec(uuid("8b217760-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ CustomFilter;
struct __declspec(uuid("8b21775d-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ _TLIApplication;
struct /* coclass */ TLIApplication;
struct __declspec(uuid("8b21775a-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ TypeInfos;
struct __declspec(uuid("8b21775b-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ RecordInfo;
struct __declspec(uuid("8b21775c-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ Records;
struct __declspec(uuid("8b217761-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ IntrinsicAliasInfo;
struct __declspec(uuid("8b217762-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ IntrinsicAliases;
struct __declspec(uuid("8b217763-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ CustomData;
struct __declspec(uuid("8b217764-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ CustomDataCollection;
struct __declspec(uuid("8b217765-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ UnionInfo;
struct __declspec(uuid("8b217766-717d-11ce-ab5b-d41203c10000"))
/* dual interface */ Unions;
enum CallConvs;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_SearchHelper, __uuidof(_SearchHelper));
_COM_SMARTPTR_TYPEDEF(SearchItem, __uuidof(SearchItem));
_COM_SMARTPTR_TYPEDEF(ListBoxNotification, __uuidof(ListBoxNotification));
_COM_SMARTPTR_TYPEDEF(CustomSort, __uuidof(CustomSort));
_COM_SMARTPTR_TYPEDEF(CustomFilter, __uuidof(CustomFilter));
_COM_SMARTPTR_TYPEDEF(SearchResults, __uuidof(SearchResults));
_COM_SMARTPTR_TYPEDEF(CustomData, __uuidof(CustomData));
_COM_SMARTPTR_TYPEDEF(CustomDataCollection, __uuidof(CustomDataCollection));
_COM_SMARTPTR_TYPEDEF(VarTypeInfo, __uuidof(VarTypeInfo));
_COM_SMARTPTR_TYPEDEF(ParameterInfo, __uuidof(ParameterInfo));
_COM_SMARTPTR_TYPEDEF(Parameters, __uuidof(Parameters));
_COM_SMARTPTR_TYPEDEF(MemberInfo, __uuidof(MemberInfo));
_COM_SMARTPTR_TYPEDEF(Members, __uuidof(Members));
_COM_SMARTPTR_TYPEDEF(DeclarationInfo, __uuidof(DeclarationInfo));
_COM_SMARTPTR_TYPEDEF(IntrinsicAliasInfo, __uuidof(IntrinsicAliasInfo));
_COM_SMARTPTR_TYPEDEF(InterfaceInfo, __uuidof(InterfaceInfo));
_COM_SMARTPTR_TYPEDEF(_BaseTypeInfos, __uuidof(_BaseTypeInfos));
_COM_SMARTPTR_TYPEDEF(Interfaces, __uuidof(Interfaces));
_COM_SMARTPTR_TYPEDEF(CoClassInfo, __uuidof(CoClassInfo));
_COM_SMARTPTR_TYPEDEF(CoClasses, __uuidof(CoClasses));
_COM_SMARTPTR_TYPEDEF(Declarations, __uuidof(Declarations));
_COM_SMARTPTR_TYPEDEF(TypeInfo, __uuidof(TypeInfo));
_COM_SMARTPTR_TYPEDEF(ConstantInfo, __uuidof(ConstantInfo));
_COM_SMARTPTR_TYPEDEF(Constants, __uuidof(Constants));
_COM_SMARTPTR_TYPEDEF(_TLIApplication, __uuidof(_TLIApplication));
_COM_SMARTPTR_TYPEDEF(TypeInfos, __uuidof(TypeInfos));
_COM_SMARTPTR_TYPEDEF(RecordInfo, __uuidof(RecordInfo));
_COM_SMARTPTR_TYPEDEF(Records, __uuidof(Records));
_COM_SMARTPTR_TYPEDEF(IntrinsicAliases, __uuidof(IntrinsicAliases));
_COM_SMARTPTR_TYPEDEF(UnionInfo, __uuidof(UnionInfo));
_COM_SMARTPTR_TYPEDEF(Unions, __uuidof(Unions));
_COM_SMARTPTR_TYPEDEF(_TypeLibInfo, __uuidof(_TypeLibInfo));

//
// Type library items
//

enum TliErrors
{
    tliErrNoCurrentTypelib = -2147220991,
    tliErrCantLoadLibrary = -2147220990,
    tliErrTypeLibNotRegistered = -2147220989,
    tliErrSearchResultsChanged = -2147220988,
    tliErrNotApplicable = -2147220987,
    tliErrIncompatibleData = -2147220986,
    tliErrIncompatibleSearchType = -2147220985,
    tliErrIncompatibleTypeKind = -2147220984,
    tliErrInaccessibleImportLib = -2147220983,
    tliErrNoDefaultValue = -2147220982,
    tliErrDataNotAvailable = -2147220981,
    tliErrNotAnEntryPoint = -2147220980,
    tliErrStopFiltering = -2147220979,
    tliErrArrayBoundsNotAvailable = -2147220978,
    tliErrSearchResultsNotSorted = -2147220977,
    tliErrTypeNotArray = -2147220976
};

enum TypeFlags
{
    TYPEFLAG_NONE = 0,
    TYPEFLAG_FAPPOBJECT = 1,
    TYPEFLAG_FCANCREATE = 2,
    TYPEFLAG_FLICENSED = 4,
    TYPEFLAG_FPREDECLID = 8,
    TYPEFLAG_FHIDDEN = 16,
    TYPEFLAG_FCONTROL = 32,
    TYPEFLAG_FDUAL = 64,
    TYPEFLAG_FNONEXTENSIBLE = 128,
    TYPEFLAG_FOLEAUTOMATION = 256,
    TYPEFLAG_FRESTRICTED = 512,
    TYPEFLAG_FAGGREGATABLE = 1024,
    TYPEFLAG_FREPLACEABLE = 2048,
    TYPEFLAG_FDISPATCHABLE = 4096,
    TYPEFLAG_FREVERSEBIND = 8192,
    TYPEFLAG_FPROXY = 16384,
    TYPEFLAG_DEFAULTFILTER = 528,
    TYPEFLAG_COCLASSATTRIBUTES = 1599,
    TYPEFLAG_INTERFACEATTRIBUTES = 31680,
    TYPEFLAG_DISPATCHATTRIBUTES = 23232,
    TYPEFLAG_ALIASATTRIBUTES = 528,
    TYPEFLAG_MODULEATTRIBUTES = 528,
    TYPEFLAG_ENUMATTRIBUTES = 528,
    TYPEFLAG_RECORDATTRIBUTES = 528,
    TYPEFLAG_UNIONATTRIBUTES = 528
};

enum ImplTypeFlags
{
    IMPLTYPEFLAG_FDEFAULT = 1,
    IMPLTYPEFLAG_FSOURCE = 2,
    IMPLTYPEFLAG_FRESTRICTED = 4,
    IMPLTYPEFLAG_FDEFAULTVTABLE = 8
};

enum TypeKinds
{
    TKIND_ENUM = 0,
    TKIND_RECORD = 1,
    TKIND_MODULE = 2,
    TKIND_INTERFACE = 3,
    TKIND_DISPATCH = 4,
    TKIND_COCLASS = 5,
    TKIND_ALIAS = 6,
    TKIND_UNION = 7,
    TKIND_MAX = 8
};

enum FuncFlags
{
    FUNCFLAG_NONE = 0,
    FUNCFLAG_FRESTRICTED = 1,
    FUNCFLAG_FSOURCE = 2,
    FUNCFLAG_FBINDABLE = 4,
    FUNCFLAG_FREQUESTEDIT = 8,
    FUNCFLAG_FDISPLAYBIND = 16,
    FUNCFLAG_FDEFAULTBIND = 32,
    FUNCFLAG_FHIDDEN = 64,
    FUNCFLAG_FUSESGETLASTERROR = 128,
    FUNCFLAG_FDEFAULTCOLLELEM = 256,
    FUNCFLAG_FUIDEFAULT = 512,
    FUNCFLAG_FNONBROWSABLE = 1024,
    FUNCFLAG_FREPLACEABLE = 2048,
    FUNCFLAG_FIMMEDIATEBIND = 4096,
    FUNCFLAG_DEFAULTFILTER = 65
};

enum VarFlags
{
    VARFLAG_NONE = 0,
    VARFLAG_FREADONLY = 1,
    VARFLAG_FSOURCE = 2,
    VARFLAG_FBINDABLE = 4,
    VARFLAG_FREQUESTEDIT = 8,
    VARFLAG_FDISPLAYBIND = 16,
    VARFLAG_FDEFAULTBIND = 32,
    VARFLAG_FHIDDEN = 64,
    VARFLAG_FRESTRICTED = 128,
    VARFLAG_FDEFAULTCOLLELEM = 256,
    VARFLAG_FUIDEFAULT = 512,
    VARFLAG_FNONBROWSABLE = 1024,
    VARFLAG_FREPLACEABLE = 2048,
    VARFLAG_FIMMEDIATEBIND = 4096,
    VARFLAG_DEFAULTFILTER = 192
};

enum SysKinds
{
    SYS_WIN16 = 0,
    SYS_WIN32 = 1,
    SYS_MAC = 2
};

enum LibFlags
{
    LIBFLAG_FRESTRICTED = 1,
    LIBFLAG_FCONTROL = 2,
    LIBFLAG_FHIDDEN = 4,
    LIBFLAG_FHASDISKIMAGE = 8
};

enum InvokeKinds
{
    INVOKE_UNKNOWN = 0,
    INVOKE_FUNC = 1,
    INVOKE_PROPERTYGET = 2,
    INVOKE_PROPERTYPUT = 4,
    INVOKE_PROPERTYPUTREF = 8,
    INVOKE_EVENTFUNC = 16,
    INVOKE_CONST = 32
};

enum IDLFlags
{
    IDLFLAG_NONE = 0,
    IDLFLAG_FIN = 1,
    IDLFLAG_FOUT = 2,
    IDLFLAG_FLCID = 4,
    IDLFLAG_FRETVAL = 8
};

enum ParamFlags
{
    PARAMFLAG_NONE = 0,
    PARAMFLAG_FIN = 1,
    PARAMFLAG_FOUT = 2,
    PARAMFLAG_FLCID = 4,
    PARAMFLAG_FRETVAL = 8,
    PARAMFLAG_FOPT = 16,
    PARAMFLAG_FHASDEFAULT = 32,
    PARAMFLAG_FHASCUSTDATA = 64
};

enum DescKinds
{
    DESCKIND_NONE = 0,
    DESCKIND_FUNCDESC = 1,
    DESCKIND_VARDESC = 2
};

enum TliVarType
{
    VT_EMPTY = 0,
    VT_NULL = 1,
    VT_I2 = 2,
    VT_I4 = 3,
    VT_R4 = 4,
    VT_R8 = 5,
    VT_CY = 6,
    VT_DATE = 7,
    VT_BSTR = 8,
    VT_DISPATCH = 9,
    VT_ERROR = 10,
    VT_BOOL = 11,
    VT_VARIANT = 12,
    VT_UNKNOWN = 13,
    VT_DECIMAL = 14,
    VT_I1 = 16,
    VT_UI1 = 17,
    VT_UI2 = 18,
    VT_UI4 = 19,
    VT_I8 = 20,
    VT_UI8 = 21,
    VT_INT = 22,
    VT_UINT = 23,
    VT_VOID = 24,
    VT_HRESULT = 25,
    VT_PTR = 26,
    VT_SAFEARRAY = 27,
    VT_CARRAY = 28,
    VT_USERDEFINED = 29,
    VT_LPSTR = 30,
    VT_LPWSTR = 31,
    VT_RECORD = 36,
    VT_FILETIME = 64,
    VT_BLOB = 65,
    VT_STREAM = 66,
    VT_STORAGE = 67,
    VT_STREAMED_OBJECT = 68,
    VT_STORED_OBJECT = 69,
    VT_BLOB_OBJECT = 70,
    VT_CF = 71,
    VT_CLSID = 72,
    VT_VECTOR = 4096,
    VT_ARRAY = 8192,
    VT_BYREF = 16384,
    VT_RESERVED = 32768
};

enum TliSearchTypes
{
    tliStDefault = 4096,
    tliStClasses = 1,
    tliStEvents = 2,
    tliStConstants = 4,
    tliStDeclarations = 8,
    tliStAppObject = 16,
    tliStRecords = 32,
    tliStIntrinsicAliases = 64,
    tliStUnions = 128,
    tliStAll = 239
};

enum TliWindowTypes
{
    tliWtListBox = 0,
    tliWtComboBox = 1
};

enum TliItemDataTypes
{
    tliIdtMemberID = 0,
    tliIdtInvokeKinds = 1
};

struct __declspec(uuid("8b217752-717d-11ce-ab5b-d41203c10000"))
SearchHelper;
    // [ default ] interface _SearchHelper

struct __declspec(uuid("8b217746-717d-11ce-ab5b-d41203c10000"))
TypeLibInfo;
    // [ default ] interface _TypeLibInfo

struct __declspec(uuid("8b217751-717d-11ce-ab5b-d41203c10000"))
_SearchHelper : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCheckHaveMatch))
    VARIANT_BOOL CheckHaveMatch[];

    //
    // Wrapper methods for error-handling
    //

    _TypeLibInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    HRESULT _OldInit ( );
    VARIANT_BOOL GetCheckHaveMatch (
        _bstr_t Name );
    void GetInit (
        enum SysKinds SysKind,
        long LCID,
        short GrowSize );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall raw__OldInit ( ) = 0;
      virtual HRESULT __stdcall get_CheckHaveMatch (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall get_Init (
        /*[in]*/ enum SysKinds SysKind,
        /*[in]*/ long LCID,
        /*[in]*/ short GrowSize ) = 0;
};

struct __declspec(uuid("8b217756-717d-11ce-ab5b-d41203c10000"))
SearchItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetSearchData))
    long SearchData;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=Get_OldLibNum))
    unsigned char _OldLibNum;
    __declspec(property(get=GetSearchType))
    enum TliSearchTypes SearchType;
    __declspec(property(get=GetMemberId))
    long MemberId;
    __declspec(property(get=GetInvokeKinds))
    enum InvokeKinds _InvokeKinds;
    __declspec(property(get=GetNamePtrW))
    long NamePtrW;
    __declspec(property(get=GetLibNum))
    short LibNum;
    __declspec(property(get=GetConstant))
    VARIANT_BOOL Constant;
    __declspec(property(get=GetHidden))
    VARIANT_BOOL Hidden;
    __declspec(property(get=GetInvokeGroup))
    short InvokeGroup;

    //
    // Wrapper methods for error-handling
    //

    SearchItemPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    long GetSearchData ( );
    short GetTypeInfoNumber ( );
    unsigned char Get_OldLibNum ( );
    enum TliSearchTypes GetSearchType ( );
    long GetMemberId ( );
    enum InvokeKinds GetInvokeKinds ( );
    long GetNamePtrW ( );
    short GetLibNum ( );
    VARIANT_BOOL GetConstant ( );
    VARIANT_BOOL GetHidden ( );
    short GetInvokeGroup ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct SearchItem * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_SearchData (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldLibNum (
        /*[out,retval]*/ unsigned char * retVal ) = 0;
      virtual HRESULT __stdcall get_SearchType (
        /*[out,retval]*/ enum TliSearchTypes * retVal ) = 0;
      virtual HRESULT __stdcall get_MemberId (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_InvokeKinds (
        /*[out,retval]*/ enum InvokeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_NamePtrW (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_LibNum (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_Constant (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall get_InvokeGroup (
        /*[out,retval]*/ short * retVal ) = 0;
};

struct __declspec(uuid("8b217758-717d-11ce-ab5b-d41203c10000"))
ListBoxNotification : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT OnAddString (
        long lpstr,
        VARIANT_BOOL fUnicode );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_OnAddString (
        /*[in]*/ long lpstr,
        /*[in]*/ VARIANT_BOOL fUnicode ) = 0;
};

struct __declspec(uuid("8b21775f-717d-11ce-ab5b-d41203c10000"))
CustomSort : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Compare (
        struct SearchItem * Item1,
        struct SearchItem * Item2,
        long * Compare );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Compare (
        /*[in]*/ struct SearchItem * Item1,
        /*[in]*/ struct SearchItem * Item2,
        /*[in,out]*/ long * Compare ) = 0;
};

enum TliCustomFilterAction
{
    tliCfaLeave = 0,
    tliCfaDuplicate = 1,
    tliCfaExtract = 2,
    tliCfaDelete = 3
};

struct __declspec(uuid("8b217760-717d-11ce-ab5b-d41203c10000"))
CustomFilter : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Visit (
        struct SearchItem * Item,
        enum TliCustomFilterAction * Action );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Visit (
        /*[in]*/ struct SearchItem * Item,
        /*[in,out]*/ enum TliCustomFilterAction * Action ) = 0;
};

struct __declspec(uuid("8b217757-717d-11ce-ab5b-d41203c10000"))
SearchResults : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    SearchItemPtr Item[];
    __declspec(property(get=Get_OldItem))
    SearchItemPtr _OldItem[];
    __declspec(property(get=Get_OldCount))
    short _OldCount;
    __declspec(property(get=GetSorted))
    VARIANT_BOOL Sorted;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    SearchResultsPtr Me ( );
    HRESULT _placeholder_destructor ( );
    IUnknownPtr _NewEnum ( );
    SearchItemPtr Get_OldItem (
        short Index );
    short Get_OldCount ( );
    VARIANT_BOOL GetSorted ( );
    HRESULT Sort (
        struct CustomSort * CustomSort );
    SearchResultsPtr Filter (
        struct CustomFilter * CustomFilter,
        struct SearchResults * * AppendExtractedTo,
        struct SearchItem * StartAfter );
    SearchItemPtr GetItem (
        long Index );
    long GetCount ( );
    long LocateSorted (
        struct CustomSort * CustomSort );
    long Locate (
        _bstr_t SearchString,
        struct CustomSort * CustomSort,
        long StartAfter );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get__OldItem (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct SearchItem * * retVal ) = 0;
      virtual HRESULT __stdcall get__OldCount (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_Sorted (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ struct CustomSort * CustomSort ) = 0;
      virtual HRESULT __stdcall raw_Filter (
        /*[in]*/ struct CustomFilter * CustomFilter,
        /*[in,out]*/ struct SearchResults * * AppendExtractedTo,
        /*[in]*/ struct SearchItem * StartAfter,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct SearchItem * * retVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall raw_LocateSorted (
        /*[in]*/ struct CustomSort * CustomSort,
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall raw_Locate (
        /*[in]*/ BSTR SearchString,
        /*[in]*/ struct CustomSort * CustomSort,
        /*[in]*/ long StartAfter,
        /*[out,retval]*/ long * retVal ) = 0;
};

struct __declspec(uuid("8b21775e-717d-11ce-ab5b-d41203c10000"))
TLIApplication;
    // [ default ] interface _TLIApplication

struct __declspec(uuid("8b217763-717d-11ce-ab5b-d41203c10000"))
CustomData : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetValue))
    _variant_t Value;

    //
    // Wrapper methods for error-handling
    //

    CustomDataPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetGUID ( );
    _variant_t GetValue ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct CustomData * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * retVal ) = 0;
};

struct __declspec(uuid("8b217764-717d-11ce-ab5b-d41203c10000"))
CustomDataCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    CustomDataPtr Item[];
    __declspec(property(get=GetCount))
    short Count;

    //
    // Wrapper methods for error-handling
    //

    CustomDataCollectionPtr Me ( );
    HRESULT _placeholder_destructor ( );
    IUnknownPtr _NewEnum ( );
    CustomDataPtr GetItem (
        short Index );
    short GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct CustomData * * retVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * retVal ) = 0;
};

enum CallConvs
{
    CC_FASTCALL = 0,
    CC_CDECL = 1,
    CC_MSCPASCAL = 2,
    CC_PASCAL = 2,
    CC_MACPASCAL = 3,
    CC_STDCALL = 4,
    CC_FPFASTCALL = 5,
    CC_SYSCALL = 6,
    CC_MPWCDECL = 7,
    CC_MPWPASCAL = 8,
    CC_MAX = 9
};

struct __declspec(uuid("8b21774b-717d-11ce-ab5b-d41203c10000"))
VarTypeInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetVarType))
    enum TliVarType VarType;
    __declspec(property(get=GetTypeInfo))
    TypeInfoPtr TypeInfo;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=GetTypedVariant))
    _variant_t TypedVariant;
    __declspec(property(get=GetIsExternalType))
    VARIANT_BOOL IsExternalType;
    __declspec(property(get=GetTypeLibInfoExternal))
    _TypeLibInfoPtr TypeLibInfoExternal;
    __declspec(property(get=GetPointerLevel))
    short PointerLevel;
    __declspec(property(get=GetElementPointerLevel))
    short ElementPointerLevel;

    //
    // Wrapper methods for error-handling
    //

    VarTypeInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    void Get_OldVarType ( );
    TypeInfoPtr GetTypeInfo ( );
    short GetTypeInfoNumber ( );
    _variant_t GetTypedVariant ( );
    VARIANT_BOOL GetIsExternalType ( );
    _TypeLibInfoPtr GetTypeLibInfoExternal ( );
    short GetPointerLevel ( );
    enum TliVarType GetVarType ( );
    short ArrayBounds (
        SAFEARRAY * * Bounds );
    short GetElementPointerLevel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get__OldVarType ( ) = 0;
      virtual HRESULT __stdcall get_TypeInfo (
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_TypedVariant (
        /*[out,retval]*/ VARIANT * retVal ) = 0;
      virtual HRESULT __stdcall get_IsExternalType (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeLibInfoExternal (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_PointerLevel (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_VarType (
        /*[out,retval]*/ enum TliVarType * retVal ) = 0;
      virtual HRESULT __stdcall raw_ArrayBounds (
        /*[out]*/ SAFEARRAY * * Bounds,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_ElementPointerLevel (
        /*[out,retval]*/ short * retVal ) = 0;
};

struct __declspec(uuid("8b217749-717d-11ce-ab5b-d41203c10000"))
ParameterInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetOptional))
    VARIANT_BOOL Optional;
    __declspec(property(get=GetVarTypeInfo))
    VarTypeInfoPtr VarTypeInfo;
    __declspec(property(get=GetDefault))
    VARIANT_BOOL Default;
    __declspec(property(get=GetDefaultValue))
    _variant_t DefaultValue;
    __declspec(property(get=GetHasCustomData))
    VARIANT_BOOL HasCustomData;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetFlags))
    enum ParamFlags Flags;

    //
    // Wrapper methods for error-handling
    //

    ParameterInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    VARIANT_BOOL GetOptional ( );
    void Get_OldFlags ( );
    VarTypeInfoPtr GetVarTypeInfo ( );
    VARIANT_BOOL GetDefault ( );
    _variant_t GetDefaultValue ( );
    VARIANT_BOOL GetHasCustomData ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    enum ParamFlags GetFlags ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct ParameterInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_Optional (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall get__OldFlags ( ) = 0;
      virtual HRESULT __stdcall get_VarTypeInfo (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall get_DefaultValue (
        /*[out,retval]*/ VARIANT * retVal ) = 0;
      virtual HRESULT __stdcall get_HasCustomData (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_Flags (
        /*[out,retval]*/ enum ParamFlags * retVal ) = 0;
};

struct __declspec(uuid("8b21774a-717d-11ce-ab5b-d41203c10000"))
Parameters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    ParameterInfoPtr Item[];
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetOptionalCount))
    short OptionalCount;
    __declspec(property(get=GetDefaultCount))
    short DefaultCount;

    //
    // Wrapper methods for error-handling
    //

    ParametersPtr Me ( );
    HRESULT _placeholder_destructor ( );
    IUnknownPtr _NewEnum ( );
    ParameterInfoPtr GetItem (
        short Index );
    short GetCount ( );
    short GetOptionalCount ( );
    short GetDefaultCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct Parameters * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct ParameterInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_OptionalCount (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_DefaultCount (
        /*[out,retval]*/ short * retVal ) = 0;
};

struct __declspec(uuid("8b217747-717d-11ce-ab5b-d41203c10000"))
MemberInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetParameters))
    ParametersPtr Parameters;
    __declspec(property(get=GetReturnType))
    VarTypeInfoPtr ReturnType;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetValue))
    _variant_t Value;
    __declspec(property(get=GetMemberId))
    long MemberId;
    __declspec(property(get=GetVTableOffset))
    short VTableOffset;
    __declspec(property(get=GetInvokeKind))
    enum InvokeKinds InvokeKind;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetDescKind))
    enum DescKinds DescKind;
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;
    __declspec(property(get=GetCallConv))
    enum CallConvs CallConv;

    //
    // Wrapper methods for error-handling
    //

    MemberInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    ParametersPtr GetParameters ( );
    VarTypeInfoPtr GetReturnType ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    void Get_OldDescKind ( );
    _variant_t GetValue ( );
    long GetMemberId ( );
    short GetVTableOffset ( );
    enum InvokeKinds GetInvokeKind ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    enum DescKinds GetDescKind ( );
    HRESULT GetDllEntry (
        BSTR * DllName,
        BSTR * EntryName,
        short * Ordinal );
    _bstr_t GetHelpString (
        long LCID );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );
    enum CallConvs GetCallConv ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct MemberInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct Parameters * * retVal ) = 0;
      virtual HRESULT __stdcall get_ReturnType (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldDescKind ( ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * retVal ) = 0;
      virtual HRESULT __stdcall get_MemberId (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_VTableOffset (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_InvokeKind (
        /*[out,retval]*/ enum InvokeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_DescKind (
        /*[out,retval]*/ enum DescKinds * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetDllEntry (
        /*[out]*/ BSTR * DllName,
        /*[out]*/ BSTR * EntryName,
        /*[out]*/ short * Ordinal ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_CallConv (
        /*[out,retval]*/ enum CallConvs * retVal ) = 0;
};

struct __declspec(uuid("8b217748-717d-11ce-ab5b-d41203c10000"))
Members : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    MemberInfoPtr Item[];
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetFuncFilter,put=PutFuncFilter))
    enum FuncFlags FuncFilter;
    __declspec(property(get=GetVarFilter,put=PutVarFilter))
    enum VarFlags VarFilter;
    __declspec(property(get=GetGetFilteredMembers))
    SearchResultsPtr GetFilteredMembers[];

    //
    // Wrapper methods for error-handling
    //

    MembersPtr Me ( );
    HRESULT _placeholder_destructor ( );
    IUnknownPtr _NewEnum ( );
    MemberInfoPtr GetItem (
        short Index );
    short GetCount ( );
    void PutFuncFilter (
        enum FuncFlags retVal );
    enum FuncFlags GetFuncFilter ( );
    void PutVarFilter (
        enum VarFlags retVal );
    enum VarFlags GetVarFilter ( );
    HRESULT _OldFillList ( );
    SearchResultsPtr GetGetFilteredMembers (
        VARIANT_BOOL ShowUnderscore );
    short GetFilteredMembersDirect (
        int hWnd,
        enum TliWindowTypes WindowType,
        enum TliItemDataTypes ItemDataType,
        VARIANT_BOOL ShowUnderscore );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct Members * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct MemberInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall put_FuncFilter (
        /*[in]*/ enum FuncFlags retVal ) = 0;
      virtual HRESULT __stdcall get_FuncFilter (
        /*[out,retval]*/ enum FuncFlags * retVal ) = 0;
      virtual HRESULT __stdcall put_VarFilter (
        /*[in]*/ enum VarFlags retVal ) = 0;
      virtual HRESULT __stdcall get_VarFilter (
        /*[out,retval]*/ enum VarFlags * retVal ) = 0;
      virtual HRESULT __stdcall raw__OldFillList ( ) = 0;
      virtual HRESULT __stdcall get_GetFilteredMembers (
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetFilteredMembersDirect (
        /*[in]*/ int hWnd,
        /*[in]*/ enum TliWindowTypes WindowType,
        /*[in]*/ enum TliItemDataTypes ItemDataType,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ short * retVal ) = 0;
};

struct __declspec(uuid("8b21774f-717d-11ce-ab5b-d41203c10000"))
DeclarationInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetTypeKindString))
    _bstr_t TypeKindString;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=GetGetMember))
    MemberInfoPtr GetMember[];
    __declspec(property(get=GetMembers))
    MembersPtr Members;
    __declspec(property(get=GetParent))
    _TypeLibInfoPtr Parent;
    __declspec(property(get=GetTypeKind))
    enum TypeKinds TypeKind;
    __declspec(property(get=GetResolvedType))
    VarTypeInfoPtr ResolvedType;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetITypeInfo))
    IUnknownPtr ITypeInfo;
    __declspec(property(get=GetMajorVersion))
    short MajorVersion;
    __declspec(property(get=GetMinorVersion))
    short MinorVersion;
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;

    //
    // Wrapper methods for error-handling
    //

    DeclarationInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    _bstr_t GetGUID ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    void Get_OldTypeKind ( );
    _bstr_t GetTypeKindString ( );
    short GetTypeInfoNumber ( );
    HRESULT _placeholder_VTableInterface ( );
    MemberInfoPtr GetGetMember (
        const _variant_t & Index );
    MembersPtr GetMembers ( );
    _TypeLibInfoPtr GetParent ( );
    HRESULT _ImpliedInterfaces ( );
    HRESULT _DefaultInterface ( );
    HRESULT _DefaultEventInterface ( );
    enum TypeKinds GetTypeKind ( );
    VarTypeInfoPtr GetResolvedType ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    _bstr_t GetHelpString (
        long LCID );
    IUnknownPtr GetITypeInfo ( );
    short GetMajorVersion ( );
    short GetMinorVersion ( );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct DeclarationInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldTypeKind ( ) = 0;
      virtual HRESULT __stdcall get_TypeKindString (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_VTableInterface ( ) = 0;
      virtual HRESULT __stdcall get_GetMember (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct MemberInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ struct Members * * retVal ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__ImpliedInterfaces ( ) = 0;
      virtual HRESULT __stdcall raw__DefaultInterface ( ) = 0;
      virtual HRESULT __stdcall raw__DefaultEventInterface ( ) = 0;
      virtual HRESULT __stdcall get_TypeKind (
        /*[out,retval]*/ enum TypeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_ResolvedType (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_ITypeInfo (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_MajorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_MinorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
};

struct __declspec(uuid("8b217761-717d-11ce-ab5b-d41203c10000"))
IntrinsicAliasInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetTypeKindString))
    _bstr_t TypeKindString;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=GetParent))
    _TypeLibInfoPtr Parent;
    __declspec(property(get=GetTypeKind))
    enum TypeKinds TypeKind;
    __declspec(property(get=GetResolvedType))
    VarTypeInfoPtr ResolvedType;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetITypeInfo))
    IUnknownPtr ITypeInfo;
    __declspec(property(get=GetMajorVersion))
    short MajorVersion;
    __declspec(property(get=GetMinorVersion))
    short MinorVersion;
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;

    //
    // Wrapper methods for error-handling
    //

    IntrinsicAliasInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    _bstr_t GetGUID ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    void Get_OldTypeKind ( );
    _bstr_t GetTypeKindString ( );
    short GetTypeInfoNumber ( );
    HRESULT _placeholder_VTableInterface ( );
    HRESULT _placeholder_GetMember ( );
    HRESULT _placeholder_Members ( );
    _TypeLibInfoPtr GetParent ( );
    HRESULT _ImpliedInterfaces ( );
    HRESULT _DefaultInterface ( );
    HRESULT _DefaultEventInterface ( );
    enum TypeKinds GetTypeKind ( );
    VarTypeInfoPtr GetResolvedType ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    _bstr_t GetHelpString (
        long LCID );
    IUnknownPtr GetITypeInfo ( );
    short GetMajorVersion ( );
    short GetMinorVersion ( );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct IntrinsicAliasInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldTypeKind ( ) = 0;
      virtual HRESULT __stdcall get_TypeKindString (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_VTableInterface ( ) = 0;
      virtual HRESULT __stdcall raw__placeholder_GetMember ( ) = 0;
      virtual HRESULT __stdcall raw__placeholder_Members ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__ImpliedInterfaces ( ) = 0;
      virtual HRESULT __stdcall raw__DefaultInterface ( ) = 0;
      virtual HRESULT __stdcall raw__DefaultEventInterface ( ) = 0;
      virtual HRESULT __stdcall get_TypeKind (
        /*[out,retval]*/ enum TypeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_ResolvedType (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_ITypeInfo (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_MajorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_MinorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
};

struct __declspec(uuid("8b217741-717d-11ce-ab5b-d41203c10000"))
InterfaceInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetTypeKindString))
    _bstr_t TypeKindString;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=GetVTableInterface))
    InterfaceInfoPtr VTableInterface;
    __declspec(property(get=GetGetMember))
    MemberInfoPtr GetMember[];
    __declspec(property(get=GetMembers))
    MembersPtr Members;
    __declspec(property(get=GetParent))
    _TypeLibInfoPtr Parent;
    __declspec(property(get=GetImpliedInterfaces))
    InterfacesPtr ImpliedInterfaces;
    __declspec(property(get=GetTypeKind))
    enum TypeKinds TypeKind;
    __declspec(property(get=GetResolvedType))
    VarTypeInfoPtr ResolvedType;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetITypeInfo))
    IUnknownPtr ITypeInfo;
    __declspec(property(get=GetMajorVersion))
    short MajorVersion;
    __declspec(property(get=GetMinorVersion))
    short MinorVersion;
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;

    //
    // Wrapper methods for error-handling
    //

    InterfaceInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    _bstr_t GetGUID ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    void Get_OldTypeKind ( );
    _bstr_t GetTypeKindString ( );
    short GetTypeInfoNumber ( );
    InterfaceInfoPtr GetVTableInterface ( );
    MemberInfoPtr GetGetMember (
        const _variant_t & Index );
    MembersPtr GetMembers ( );
    _TypeLibInfoPtr GetParent ( );
    InterfacesPtr GetImpliedInterfaces ( );
    HRESULT _DefaultInterface ( );
    HRESULT _DefaultEventInterface ( );
    enum TypeKinds GetTypeKind ( );
    VarTypeInfoPtr GetResolvedType ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    _bstr_t GetHelpString (
        long LCID );
    IUnknownPtr GetITypeInfo ( );
    short GetMajorVersion ( );
    short GetMinorVersion ( );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldTypeKind ( ) = 0;
      virtual HRESULT __stdcall get_TypeKindString (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_VTableInterface (
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_GetMember (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct MemberInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ struct Members * * retVal ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_ImpliedInterfaces (
        /*[out,retval]*/ struct Interfaces * * retVal ) = 0;
      virtual HRESULT __stdcall raw__DefaultInterface ( ) = 0;
      virtual HRESULT __stdcall raw__DefaultEventInterface ( ) = 0;
      virtual HRESULT __stdcall get_TypeKind (
        /*[out,retval]*/ enum TypeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_ResolvedType (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_ITypeInfo (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_MajorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_MinorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
};

struct __declspec(uuid("8b217750-717d-11ce-ab5b-d41203c10000"))
_BaseTypeInfos : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    short Count;

    //
    // Wrapper methods for error-handling
    //

    TypeInfosPtr Me ( );
    HRESULT _placeholder_destructor ( );
    IUnknownPtr _NewEnum ( );
    short GetCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct TypeInfos * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * retVal ) = 0;
};

struct __declspec(uuid("8b217742-717d-11ce-ab5b-d41203c10000"))
Interfaces : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    InterfaceInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    InterfaceInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    InterfaceInfoPtr GetItem (
        short Index );
    InterfaceInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    InterfaceInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b217743-717d-11ce-ab5b-d41203c10000"))
CoClassInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetTypeKindString))
    _bstr_t TypeKindString;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=GetParent))
    _TypeLibInfoPtr Parent;
    __declspec(property(get=GetInterfaces))
    InterfacesPtr Interfaces;
    __declspec(property(get=GetDefaultInterface))
    InterfaceInfoPtr DefaultInterface;
    __declspec(property(get=GetDefaultEventInterface))
    InterfaceInfoPtr DefaultEventInterface;
    __declspec(property(get=GetTypeKind))
    enum TypeKinds TypeKind;
    __declspec(property(get=GetResolvedType))
    VarTypeInfoPtr ResolvedType;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetITypeInfo))
    IUnknownPtr ITypeInfo;
    __declspec(property(get=GetMajorVersion))
    short MajorVersion;
    __declspec(property(get=GetMinorVersion))
    short MinorVersion;
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;

    //
    // Wrapper methods for error-handling
    //

    CoClassInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    _bstr_t GetGUID ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    void Get_OldTypeKind ( );
    _bstr_t GetTypeKindString ( );
    short GetTypeInfoNumber ( );
    HRESULT _placeholder_VTableInterface ( );
    HRESULT _placeholder_GetMember ( );
    HRESULT _placeholder_Members ( );
    _TypeLibInfoPtr GetParent ( );
    InterfacesPtr GetInterfaces ( );
    InterfaceInfoPtr GetDefaultInterface ( );
    InterfaceInfoPtr GetDefaultEventInterface ( );
    enum TypeKinds GetTypeKind ( );
    VarTypeInfoPtr GetResolvedType ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    _bstr_t GetHelpString (
        long LCID );
    IUnknownPtr GetITypeInfo ( );
    short GetMajorVersion ( );
    short GetMinorVersion ( );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct CoClassInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldTypeKind ( ) = 0;
      virtual HRESULT __stdcall get_TypeKindString (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_VTableInterface ( ) = 0;
      virtual HRESULT __stdcall raw__placeholder_GetMember ( ) = 0;
      virtual HRESULT __stdcall raw__placeholder_Members ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Interfaces (
        /*[out,retval]*/ struct Interfaces * * retVal ) = 0;
      virtual HRESULT __stdcall get_DefaultInterface (
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_DefaultEventInterface (
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeKind (
        /*[out,retval]*/ enum TypeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_ResolvedType (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_ITypeInfo (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_MajorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_MinorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
};

struct __declspec(uuid("8b217744-717d-11ce-ab5b-d41203c10000"))
CoClasses : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    CoClassInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    CoClassInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    CoClassInfoPtr GetItem (
        short Index );
    CoClassInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    CoClassInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct CoClassInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct CoClassInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct CoClassInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b21774e-717d-11ce-ab5b-d41203c10000"))
Declarations : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    DeclarationInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    DeclarationInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    DeclarationInfoPtr GetItem (
        short Index );
    DeclarationInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    DeclarationInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct DeclarationInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct DeclarationInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct DeclarationInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b217759-717d-11ce-ab5b-d41203c10000"))
TypeInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetTypeKindString))
    _bstr_t TypeKindString;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=GetVTableInterface))
    InterfaceInfoPtr VTableInterface;
    __declspec(property(get=GetGetMember))
    MemberInfoPtr GetMember[];
    __declspec(property(get=GetMembers))
    MembersPtr Members;
    __declspec(property(get=GetParent))
    _TypeLibInfoPtr Parent;
    __declspec(property(get=GetInterfaces))
    InterfacesPtr Interfaces;
    __declspec(property(get=GetDefaultInterface))
    InterfaceInfoPtr DefaultInterface;
    __declspec(property(get=GetDefaultEventInterface))
    InterfaceInfoPtr DefaultEventInterface;
    __declspec(property(get=GetTypeKind))
    enum TypeKinds TypeKind;
    __declspec(property(get=GetResolvedType))
    VarTypeInfoPtr ResolvedType;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetITypeInfo))
    IUnknownPtr ITypeInfo;
    __declspec(property(get=GetMajorVersion))
    short MajorVersion;
    __declspec(property(get=GetMinorVersion))
    short MinorVersion;
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;

    //
    // Wrapper methods for error-handling
    //

    TypeInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    _bstr_t GetGUID ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    void Get_OldTypeKind ( );
    _bstr_t GetTypeKindString ( );
    short GetTypeInfoNumber ( );
    InterfaceInfoPtr GetVTableInterface ( );
    MemberInfoPtr GetGetMember (
        const _variant_t & Index );
    MembersPtr GetMembers ( );
    _TypeLibInfoPtr GetParent ( );
    InterfacesPtr GetInterfaces ( );
    InterfaceInfoPtr GetDefaultInterface ( );
    InterfaceInfoPtr GetDefaultEventInterface ( );
    enum TypeKinds GetTypeKind ( );
    VarTypeInfoPtr GetResolvedType ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    _bstr_t GetHelpString (
        long LCID );
    IUnknownPtr GetITypeInfo ( );
    short GetMajorVersion ( );
    short GetMinorVersion ( );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldTypeKind ( ) = 0;
      virtual HRESULT __stdcall get_TypeKindString (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_VTableInterface (
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_GetMember (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct MemberInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ struct Members * * retVal ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Interfaces (
        /*[out,retval]*/ struct Interfaces * * retVal ) = 0;
      virtual HRESULT __stdcall get_DefaultInterface (
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_DefaultEventInterface (
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeKind (
        /*[out,retval]*/ enum TypeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_ResolvedType (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_ITypeInfo (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_MajorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_MinorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
};

struct __declspec(uuid("8b21774d-717d-11ce-ab5b-d41203c10000"))
ConstantInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetTypeKindString))
    _bstr_t TypeKindString;
    __declspec(property(get=GetTypeInfoNumber))
    short TypeInfoNumber;
    __declspec(property(get=GetGetMember))
    MemberInfoPtr GetMember[];
    __declspec(property(get=GetMembers))
    MembersPtr Members;
    __declspec(property(get=GetParent))
    _TypeLibInfoPtr Parent;
    __declspec(property(get=GetTypeKind))
    enum TypeKinds TypeKind;
    __declspec(property(get=GetResolvedType))
    VarTypeInfoPtr ResolvedType;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetITypeInfo))
    IUnknownPtr ITypeInfo;
    __declspec(property(get=GetMajorVersion))
    short MajorVersion;
    __declspec(property(get=GetMinorVersion))
    short MinorVersion;
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;

    //
    // Wrapper methods for error-handling
    //

    TypeInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetName ( );
    _bstr_t GetGUID ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    void Get_OldTypeKind ( );
    _bstr_t GetTypeKindString ( );
    short GetTypeInfoNumber ( );
    HRESULT _placeholder_VTableInterface ( );
    MemberInfoPtr GetGetMember (
        const _variant_t & Index );
    MembersPtr GetMembers ( );
    _TypeLibInfoPtr GetParent ( );
    HRESULT _ImpliedInterfaces ( );
    HRESULT _DefaultInterface ( );
    HRESULT _DefaultEventInterface ( );
    enum TypeKinds GetTypeKind ( );
    VarTypeInfoPtr GetResolvedType ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    _bstr_t GetHelpString (
        long LCID );
    IUnknownPtr GetITypeInfo ( );
    short GetMajorVersion ( );
    short GetMinorVersion ( );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldTypeKind ( ) = 0;
      virtual HRESULT __stdcall get_TypeKindString (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoNumber (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_VTableInterface ( ) = 0;
      virtual HRESULT __stdcall get_GetMember (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct MemberInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ struct Members * * retVal ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__ImpliedInterfaces ( ) = 0;
      virtual HRESULT __stdcall raw__DefaultInterface ( ) = 0;
      virtual HRESULT __stdcall raw__DefaultEventInterface ( ) = 0;
      virtual HRESULT __stdcall get_TypeKind (
        /*[out,retval]*/ enum TypeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_ResolvedType (
        /*[out,retval]*/ struct VarTypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_ITypeInfo (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall get_MajorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_MinorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
};

struct __declspec(uuid("8b21774c-717d-11ce-ab5b-d41203c10000"))
Constants : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    ConstantInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    ConstantInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    ConstantInfoPtr GetItem (
        short Index );
    ConstantInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    ConstantInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct ConstantInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct ConstantInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct ConstantInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b21775d-717d-11ce-ab5b-d41203c10000"))
_TLIApplication : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetListBoxNotification,put=PutRefListBoxNotification))
    ListBoxNotificationPtr ListBoxNotification;
    __declspec(property(get=GetResolveAliases,put=PutResolveAliases))
    VARIANT_BOOL ResolveAliases;
    __declspec(property(get=GetInvokeLCID,put=PutInvokeLCID))
    long InvokeLCID;

    //
    // Wrapper methods for error-handling
    //

    _TLIApplicationPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _TypeLibInfoPtr TypeLibInfoFromFile (
        _bstr_t FileName );
    InterfaceInfoPtr InterfaceInfoFromObject (
        IDispatch * Object );
    ListBoxNotificationPtr GetListBoxNotification ( );
    void PutRefListBoxNotification (
        struct ListBoxNotification * retVal );
    VARIANT_BOOL GetResolveAliases ( );
    void PutResolveAliases (
        VARIANT_BOOL retVal );
    _variant_t InvokeHook (
        IDispatch * Object,
        const _variant_t & NameOrID,
        enum InvokeKinds InvokeKind,
        SAFEARRAY * * ReverseArgList );
    _variant_t InvokeHookArray (
        IDispatch * Object,
        const _variant_t & NameOrID,
        enum InvokeKinds InvokeKind,
        SAFEARRAY * * ReverseArgList );
    HRESULT InvokeHookSub (
        IDispatch * Object,
        const _variant_t & NameOrID,
        enum InvokeKinds InvokeKind,
        SAFEARRAY * * ReverseArgList );
    HRESULT InvokeHookArraySub (
        IDispatch * Object,
        const _variant_t & NameOrID,
        enum InvokeKinds InvokeKind,
        SAFEARRAY * * ReverseArgList );
    TypeInfoPtr ClassInfoFromObject (
        IUnknown * Object );
    long InvokeID (
        IDispatch * Object,
        _bstr_t Name );
    long GetInvokeLCID ( );
    void PutInvokeLCID (
        long retVal );
    TypeInfoPtr TypeInfoFromITypeInfo (
        IUnknown * ptinfo );
    _TypeLibInfoPtr TypeLibInfoFromITypeLib (
        IUnknown * pITypeLib );
    _TypeLibInfoPtr TypeLibInfoFromRegistry (
        _bstr_t TypeLibGuid,
        short MajorVersion,
        short MinorVersion,
        long LCID );
    TypeInfoPtr TypeInfoFromRecordVariant (
        VARIANT * RecordVariant );
    _variant_t GetRecordField (
        VARIANT * RecordVariant,
        BSTR * FieldName );
    void PutRecordField (
        VARIANT * RecordVariant,
        BSTR * FieldName,
        VARIANT * retVal );
    void PutRefRecordField (
        VARIANT * RecordVariant,
        BSTR * FieldName,
        VARIANT * retVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct _TLIApplication * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall raw_TypeLibInfoFromFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw_InterfaceInfoFromObject (
        /*[in]*/ IDispatch * Object,
        /*[out,retval]*/ struct InterfaceInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_ListBoxNotification (
        /*[out,retval]*/ struct ListBoxNotification * * retVal ) = 0;
      virtual HRESULT __stdcall putref_ListBoxNotification (
        /*[in]*/ struct ListBoxNotification * retVal ) = 0;
      virtual HRESULT __stdcall get_ResolveAliases (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall put_ResolveAliases (
        /*[in]*/ VARIANT_BOOL retVal ) = 0;
      virtual HRESULT __stdcall raw_InvokeHook (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ VARIANT NameOrID,
        /*[in]*/ enum InvokeKinds InvokeKind,
        /*[in]*/ SAFEARRAY * * ReverseArgList,
        /*[out,retval]*/ VARIANT * retVal ) = 0;
      virtual HRESULT __stdcall raw_InvokeHookArray (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ VARIANT NameOrID,
        /*[in]*/ enum InvokeKinds InvokeKind,
        /*[in]*/ SAFEARRAY * * ReverseArgList,
        /*[out,retval]*/ VARIANT * retVal ) = 0;
      virtual HRESULT __stdcall raw_InvokeHookSub (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ VARIANT NameOrID,
        /*[in]*/ enum InvokeKinds InvokeKind,
        /*[in]*/ SAFEARRAY * * ReverseArgList ) = 0;
      virtual HRESULT __stdcall raw_InvokeHookArraySub (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ VARIANT NameOrID,
        /*[in]*/ enum InvokeKinds InvokeKind,
        /*[in]*/ SAFEARRAY * * ReverseArgList ) = 0;
      virtual HRESULT __stdcall raw_ClassInfoFromObject (
        /*[in]*/ IUnknown * Object,
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw_InvokeID (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_InvokeLCID (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall put_InvokeLCID (
        /*[in]*/ long retVal ) = 0;
      virtual HRESULT __stdcall raw_TypeInfoFromITypeInfo (
        /*[in]*/ IUnknown * ptinfo,
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw_TypeLibInfoFromITypeLib (
        /*[in]*/ IUnknown * pITypeLib,
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw_TypeLibInfoFromRegistry (
        /*[in]*/ BSTR TypeLibGuid,
        /*[in]*/ short MajorVersion,
        /*[in]*/ short MinorVersion,
        /*[in]*/ long LCID,
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw_TypeInfoFromRecordVariant (
        /*[in]*/ VARIANT * RecordVariant,
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_RecordField (
        /*[in,out]*/ VARIANT * RecordVariant,
        /*[in]*/ BSTR * FieldName,
        /*[out,retval]*/ VARIANT * retVal ) = 0;
      virtual HRESULT __stdcall put_RecordField (
        /*[in,out]*/ VARIANT * RecordVariant,
        /*[in]*/ BSTR * FieldName,
        /*[in]*/ VARIANT * retVal ) = 0;
      virtual HRESULT __stdcall putref_RecordField (
        /*[in,out]*/ VARIANT * RecordVariant,
        /*[in]*/ BSTR * FieldName,
        /*[in]*/ VARIANT * retVal ) = 0;
};

struct __declspec(uuid("8b21775a-717d-11ce-ab5b-d41203c10000"))
TypeInfos : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    TypeInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    TypeInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    TypeInfoPtr GetItem (
        short Index );
    TypeInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    TypeInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b21775b-717d-11ce-ab5b-d41203c10000"))
RecordInfo : ConstantInfo
{};

struct __declspec(uuid("8b21775c-717d-11ce-ab5b-d41203c10000"))
Records : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    RecordInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    RecordInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    RecordInfoPtr GetItem (
        short Index );
    RecordInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    RecordInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct RecordInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct RecordInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct RecordInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b217762-717d-11ce-ab5b-d41203c10000"))
IntrinsicAliases : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IntrinsicAliasInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    IntrinsicAliasInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    IntrinsicAliasInfoPtr GetItem (
        short Index );
    IntrinsicAliasInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    IntrinsicAliasInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IntrinsicAliasInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct IntrinsicAliasInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct IntrinsicAliasInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b217765-717d-11ce-ab5b-d41203c10000"))
UnionInfo : ConstantInfo
{};

struct __declspec(uuid("8b217766-717d-11ce-ab5b-d41203c10000"))
Unions : _BaseTypeInfos
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    UnionInfoPtr Item[];
    __declspec(property(get=GetIndexedItem))
    UnionInfoPtr IndexedItem[];

    //
    // Wrapper methods for error-handling
    //

    UnionInfoPtr GetItem (
        short Index );
    UnionInfoPtr GetIndexedItem (
        short TypeInfoNumber );
    UnionInfoPtr GetNamedItem (
        BSTR * TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct UnionInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_IndexedItem (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ struct UnionInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_NamedItem (
        /*[in,out]*/ BSTR * TypeInfoName,
        /*[out,retval]*/ struct UnionInfo * * retVal ) = 0;
};

struct __declspec(uuid("8b217745-717d-11ce-ab5b-d41203c10000"))
_TypeLibInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetRecords))
    RecordsPtr Records;
    __declspec(property(get=GetContainingFile,put=PutContainingFile))
    _bstr_t ContainingFile;
    __declspec(property(get=GetIntrinsicAliases))
    IntrinsicAliasesPtr IntrinsicAliases;
    __declspec(property(get=GetCustomDataCollection))
    CustomDataCollectionPtr CustomDataCollection;
    __declspec(property(get=GetUnions))
    UnionsPtr Unions;
    __declspec(property(get=GetHelpContext))
    long HelpContext;
    __declspec(property(get=GetHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetLCID))
    long LCID;
    __declspec(property(get=GetMajorVersion))
    short MajorVersion;
    __declspec(property(get=GetMinorVersion))
    short MinorVersion;
    __declspec(property(get=GetAttributeMask))
    short AttributeMask;
    __declspec(property(get=GetCoClasses))
    CoClassesPtr CoClasses;
    __declspec(property(get=GetInterfaces))
    InterfacesPtr Interfaces;
    __declspec(property(get=GetConstants))
    ConstantsPtr Constants;
    __declspec(property(get=GetDeclarations))
    DeclarationsPtr Declarations;
    __declspec(property(get=GetTypeInfoCount))
    short TypeInfoCount;
    __declspec(property(get=GetGetTypeInfo))
    TypeInfoPtr GetTypeInfo[];
    __declspec(property(get=GetGetTypeInfoNumber))
    short GetTypeInfoNumber[];
    __declspec(property(get=GetHelpString))
    _bstr_t HelpString[];
    __declspec(property(get=GetITypeLib,put=PutRefITypeLib))
    IUnknownPtr ITypeLib;
    __declspec(property(get=GetHelpStringDll))
    _bstr_t HelpStringDll[];
    __declspec(property(get=GetHelpStringContext))
    long HelpStringContext;
    __declspec(property(get=GetBestEquivalentType))
    _bstr_t BestEquivalentType[];
    __declspec(property(get=GetAppObjString,put=PutAppObjString))
    _bstr_t AppObjString;
    __declspec(property(get=GetLibNum,put=PutLibNum))
    short LibNum;
    __declspec(property(get=GetShowLibName,put=PutShowLibName))
    VARIANT_BOOL ShowLibName;
    __declspec(property(put=PutRef_OldListBoxNotification))
    ListBoxNotificationPtr _OldListBoxNotification;
    __declspec(property(get=GetGetTypeKind))
    enum TypeKinds GetTypeKind[];
    __declspec(property(get=GetSysKind))
    enum SysKinds SysKind;
    __declspec(property(get=GetSearchDefault,put=PutSearchDefault))
    enum TliSearchTypes SearchDefault;
    __declspec(property(get=GetTypeInfos))
    TypeInfosPtr TypeInfos;

    //
    // Wrapper methods for error-handling
    //

    _TypeLibInfoPtr Me ( );
    HRESULT _placeholder_destructor ( );
    _bstr_t GetContainingFile ( );
    void PutContainingFile (
        _bstr_t retVal );
    HRESULT LoadRegTypeLib (
        _bstr_t TypeLibGuid,
        short MajorVersion,
        short MinorVersion,
        long LCID );
    _bstr_t GetName ( );
    void Get_OldHelpString ( );
    long GetHelpContext ( );
    _bstr_t GetHelpFile ( );
    _bstr_t GetGUID ( );
    long GetLCID ( );
    void Get_OldSysKind ( );
    short GetMajorVersion ( );
    short GetMinorVersion ( );
    short GetAttributeMask ( );
    short GetAttributeStrings (
        SAFEARRAY * * AttributeArray );
    CoClassesPtr GetCoClasses ( );
    InterfacesPtr GetInterfaces ( );
    ConstantsPtr GetConstants ( );
    DeclarationsPtr GetDeclarations ( );
    short GetTypeInfoCount ( );
    void Get_OldGetTypeKind ( );
    TypeInfoPtr GetGetTypeInfo (
        VARIANT * Index );
    short GetGetTypeInfoNumber (
        _bstr_t Name );
    VARIANT_BOOL IsSameLibrary (
        struct _TypeLibInfo * CheckLib );
    HRESULT _OldResetSearchCriteria ( );
    HRESULT _OldGetTypesWithMember ( );
    HRESULT _OldGetMembersWithSubString ( );
    HRESULT _OldGetTypesWithSubString ( );
    HRESULT _OldCaseTypeName ( );
    HRESULT _OldCaseMemberName ( );
    HRESULT _OldFillTypesList ( );
    HRESULT _OldFillTypesCombo ( );
    HRESULT _OldFillMemberList ( );
    HRESULT _OldAddClassTypeToList ( );
    void PutAppObjString (
        _bstr_t retVal );
    void PutLibNum (
        short retVal );
    VARIANT_BOOL GetShowLibName ( );
    void PutShowLibName (
        VARIANT_BOOL retVal );
    void PutRef_OldListBoxNotification (
        struct ListBoxNotification * _arg1 );
    enum TypeKinds GetGetTypeKind (
        short TypeInfoNumber );
    enum SysKinds GetSysKind ( );
    enum TliSearchTypes GetSearchDefault ( );
    void PutSearchDefault (
        enum TliSearchTypes retVal );
    enum TliSearchTypes CaseTypeName (
        BSTR * bstrName,
        enum TliSearchTypes SearchType );
    VARIANT_BOOL CaseMemberName (
        BSTR * bstrName,
        enum TliSearchTypes SearchType );
    HRESULT ResetSearchCriteria (
        enum TypeFlags TypeFilter,
        VARIANT_BOOL IncludeEmptyTypes,
        VARIANT_BOOL ShowUnderscore );
    SearchResultsPtr GetTypesWithMember (
        _bstr_t MemberName,
        struct SearchResults * * StartResults,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL Sort,
        VARIANT_BOOL ShowUnderscore );
    short GetTypesWithMemberDirect (
        _bstr_t MemberName,
        int hWnd,
        enum TliWindowTypes WindowType,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL ShowUnderscore );
    SearchResultsPtr GetMembersWithSubString (
        _bstr_t SubString,
        struct SearchResults * * StartResults,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL SearchMiddle,
        struct _SearchHelper * * Helper,
        VARIANT_BOOL Sort,
        VARIANT_BOOL ShowUnderscore );
    short GetMembersWithSubStringDirect (
        _bstr_t SubString,
        int hWnd,
        enum TliWindowTypes WindowType,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL SearchMiddle,
        struct _SearchHelper * * Helper,
        VARIANT_BOOL ShowUnderscore );
    SearchResultsPtr GetTypesWithSubString (
        _bstr_t SubString,
        struct SearchResults * * StartResults,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL SearchMiddle,
        VARIANT_BOOL Sort );
    short GetTypesWithSubStringDirect (
        _bstr_t SubString,
        int hWnd,
        enum TliWindowTypes WindowType,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL SearchMiddle );
    SearchResultsPtr GetTypes (
        struct SearchResults * * StartResults,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL Sort );
    short GetTypesDirect (
        int hWnd,
        enum TliWindowTypes WindowType,
        enum TliSearchTypes SearchType );
    SearchResultsPtr GetMembers (
        long SearchData,
        VARIANT_BOOL ShowUnderscore );
    short GetMembersDirect (
        long SearchData,
        int hWnd,
        enum TliWindowTypes WindowType,
        enum TliItemDataTypes ItemDataType,
        VARIANT_BOOL ShowUnderscore );
    HRESULT SetMemberFilters (
        enum FuncFlags FuncFilter,
        enum VarFlags VarFilter );
    long MakeSearchData (
        _bstr_t TypeInfoName,
        enum TliSearchTypes SearchType );
    TypeInfosPtr GetTypeInfos ( );
    RecordsPtr GetRecords ( );
    IntrinsicAliasesPtr GetIntrinsicAliases ( );
    CustomDataCollectionPtr GetCustomDataCollection ( );
    MemberInfoPtr GetMemberInfo (
        long SearchData,
        enum InvokeKinds InvokeKinds,
        long MemberId,
        _bstr_t MemberName );
    UnionsPtr GetUnions ( );
    SearchResultsPtr AddTypes (
        SAFEARRAY * * TypeInfoNumbers,
        struct SearchResults * * StartResults,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL Sort );
    short AddTypesDirect (
        SAFEARRAY * * TypeInfoNumbers,
        int hWnd,
        enum TliWindowTypes WindowType,
        enum TliSearchTypes SearchType );
    HRESULT FreeSearchCriteria ( );
    HRESULT Register (
        _bstr_t HelpDir );
    HRESULT UnRegister ( );
    _bstr_t GetHelpString (
        long LCID );
    _bstr_t GetAppObjString ( );
    short GetLibNum ( );
    SearchResultsPtr GetMembersWithSubStringEx (
        _bstr_t SubString,
        SAFEARRAY * * InvokeGroupings,
        struct SearchResults * * StartResults,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL SearchMiddle,
        VARIANT_BOOL Sort,
        VARIANT_BOOL ShowUnderscore );
    SearchResultsPtr GetTypesWithMemberEx (
        _bstr_t MemberName,
        enum InvokeKinds InvokeKind,
        struct SearchResults * * StartResults,
        enum TliSearchTypes SearchType,
        VARIANT_BOOL Sort,
        VARIANT_BOOL ShowUnderscore );
    IUnknownPtr GetITypeLib ( );
    void PutRefITypeLib (
        IUnknown * retVal );
    _bstr_t GetHelpStringDll (
        long LCID );
    long GetHelpStringContext ( );
    _bstr_t GetBestEquivalentType (
        _bstr_t TypeInfoName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Me (
        /*[out,retval]*/ struct _TypeLibInfo * * retVal ) = 0;
      virtual HRESULT __stdcall raw__placeholder_destructor ( ) = 0;
      virtual HRESULT __stdcall get_ContainingFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall put_ContainingFile (
        /*[in]*/ BSTR retVal ) = 0;
      virtual HRESULT __stdcall raw_LoadRegTypeLib (
        /*[in]*/ BSTR TypeLibGuid,
        /*[in]*/ short MajorVersion,
        /*[in]*/ short MinorVersion,
        /*[in]*/ long LCID ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get__OldHelpString ( ) = 0;
      virtual HRESULT __stdcall get_HelpContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_LCID (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get__OldSysKind ( ) = 0;
      virtual HRESULT __stdcall get_MajorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_MinorVersion (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeMask (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_AttributeStrings (
        /*[out]*/ SAFEARRAY * * AttributeArray,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get_CoClasses (
        /*[out,retval]*/ struct CoClasses * * retVal ) = 0;
      virtual HRESULT __stdcall get_Interfaces (
        /*[out,retval]*/ struct Interfaces * * retVal ) = 0;
      virtual HRESULT __stdcall get_Constants (
        /*[out,retval]*/ struct Constants * * retVal ) = 0;
      virtual HRESULT __stdcall get_Declarations (
        /*[out,retval]*/ struct Declarations * * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfoCount (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall get__OldGetTypeKind ( ) = 0;
      virtual HRESULT __stdcall get_GetTypeInfo (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct TypeInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_GetTypeInfoNumber (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_IsSameLibrary (
        /*[in]*/ struct _TypeLibInfo * CheckLib,
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall raw__OldResetSearchCriteria ( ) = 0;
      virtual HRESULT __stdcall raw__OldGetTypesWithMember ( ) = 0;
      virtual HRESULT __stdcall raw__OldGetMembersWithSubString ( ) = 0;
      virtual HRESULT __stdcall raw__OldGetTypesWithSubString ( ) = 0;
      virtual HRESULT __stdcall raw__OldCaseTypeName ( ) = 0;
      virtual HRESULT __stdcall raw__OldCaseMemberName ( ) = 0;
      virtual HRESULT __stdcall raw__OldFillTypesList ( ) = 0;
      virtual HRESULT __stdcall raw__OldFillTypesCombo ( ) = 0;
      virtual HRESULT __stdcall raw__OldFillMemberList ( ) = 0;
      virtual HRESULT __stdcall raw__OldAddClassTypeToList ( ) = 0;
      virtual HRESULT __stdcall put_AppObjString (
        /*[in]*/ BSTR retVal ) = 0;
      virtual HRESULT __stdcall put_LibNum (
        /*[in]*/ short retVal ) = 0;
      virtual HRESULT __stdcall get_ShowLibName (
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall put_ShowLibName (
        /*[in]*/ VARIANT_BOOL retVal ) = 0;
      virtual HRESULT __stdcall putref__OldListBoxNotification (
        /*[in]*/ struct ListBoxNotification * _arg1 ) = 0;
      virtual HRESULT __stdcall get_GetTypeKind (
        /*[in]*/ short TypeInfoNumber,
        /*[out,retval]*/ enum TypeKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_SysKind (
        /*[out,retval]*/ enum SysKinds * retVal ) = 0;
      virtual HRESULT __stdcall get_SearchDefault (
        /*[out,retval]*/ enum TliSearchTypes * retVal ) = 0;
      virtual HRESULT __stdcall put_SearchDefault (
        /*[in]*/ enum TliSearchTypes retVal ) = 0;
      virtual HRESULT __stdcall raw_CaseTypeName (
        /*[in,out]*/ BSTR * bstrName,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[out,retval]*/ enum TliSearchTypes * retVal ) = 0;
      virtual HRESULT __stdcall raw_CaseMemberName (
        /*[in,out]*/ BSTR * bstrName,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[out,retval]*/ VARIANT_BOOL * retVal ) = 0;
      virtual HRESULT __stdcall raw_ResetSearchCriteria (
        /*[in]*/ enum TypeFlags TypeFilter,
        /*[in]*/ VARIANT_BOOL IncludeEmptyTypes,
        /*[in]*/ VARIANT_BOOL ShowUnderscore ) = 0;
      virtual HRESULT __stdcall raw_GetTypesWithMember (
        /*[in]*/ BSTR MemberName,
        /*[in,out]*/ struct SearchResults * * StartResults,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL Sort,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetTypesWithMemberDirect (
        /*[in]*/ BSTR MemberName,
        /*[in]*/ int hWnd,
        /*[in]*/ enum TliWindowTypes WindowType,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetMembersWithSubString (
        /*[in]*/ BSTR SubString,
        /*[in,out]*/ struct SearchResults * * StartResults,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL SearchMiddle,
        /*[in,out]*/ struct _SearchHelper * * Helper,
        /*[in]*/ VARIANT_BOOL Sort,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetMembersWithSubStringDirect (
        /*[in]*/ BSTR SubString,
        /*[in]*/ int hWnd,
        /*[in]*/ enum TliWindowTypes WindowType,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL SearchMiddle,
        /*[in,out]*/ struct _SearchHelper * * Helper,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetTypesWithSubString (
        /*[in]*/ BSTR SubString,
        /*[in,out]*/ struct SearchResults * * StartResults,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL SearchMiddle,
        /*[in]*/ VARIANT_BOOL Sort,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetTypesWithSubStringDirect (
        /*[in]*/ BSTR SubString,
        /*[in]*/ int hWnd,
        /*[in]*/ enum TliWindowTypes WindowType,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL SearchMiddle,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetTypes (
        /*[in,out]*/ struct SearchResults * * StartResults,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL Sort,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetTypesDirect (
        /*[in]*/ int hWnd,
        /*[in]*/ enum TliWindowTypes WindowType,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetMembers (
        /*[in]*/ long SearchData,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetMembersDirect (
        /*[in]*/ long SearchData,
        /*[in]*/ int hWnd,
        /*[in]*/ enum TliWindowTypes WindowType,
        /*[in]*/ enum TliItemDataTypes ItemDataType,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_SetMemberFilters (
        /*[in]*/ enum FuncFlags FuncFilter,
        /*[in]*/ enum VarFlags VarFilter ) = 0;
      virtual HRESULT __stdcall raw_MakeSearchData (
        /*[in]*/ BSTR TypeInfoName,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_TypeInfos (
        /*[out,retval]*/ struct TypeInfos * * retVal ) = 0;
      virtual HRESULT __stdcall get_Records (
        /*[out,retval]*/ struct Records * * retVal ) = 0;
      virtual HRESULT __stdcall get_IntrinsicAliases (
        /*[out,retval]*/ struct IntrinsicAliases * * retVal ) = 0;
      virtual HRESULT __stdcall get_CustomDataCollection (
        /*[out,retval]*/ struct CustomDataCollection * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetMemberInfo (
        /*[in]*/ long SearchData,
        /*[in]*/ enum InvokeKinds InvokeKinds,
        /*[in]*/ long MemberId,
        /*[in]*/ BSTR MemberName,
        /*[out,retval]*/ struct MemberInfo * * retVal ) = 0;
      virtual HRESULT __stdcall get_Unions (
        /*[out,retval]*/ struct Unions * * retVal ) = 0;
      virtual HRESULT __stdcall raw_AddTypes (
        /*[in]*/ SAFEARRAY * * TypeInfoNumbers,
        /*[in,out]*/ struct SearchResults * * StartResults,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL Sort,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_AddTypesDirect (
        /*[in]*/ SAFEARRAY * * TypeInfoNumbers,
        /*[in]*/ int hWnd,
        /*[in]*/ enum TliWindowTypes WindowType,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_FreeSearchCriteria ( ) = 0;
      virtual HRESULT __stdcall raw_Register (
        /*[in]*/ BSTR HelpDir ) = 0;
      virtual HRESULT __stdcall raw_UnRegister ( ) = 0;
      virtual HRESULT __stdcall get_HelpString (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_AppObjString (
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_LibNum (
        /*[out,retval]*/ short * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetMembersWithSubStringEx (
        /*[in]*/ BSTR SubString,
        /*[in]*/ SAFEARRAY * * InvokeGroupings,
        /*[in,out]*/ struct SearchResults * * StartResults,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL SearchMiddle,
        /*[in]*/ VARIANT_BOOL Sort,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall raw_GetTypesWithMemberEx (
        /*[in]*/ BSTR MemberName,
        /*[in]*/ enum InvokeKinds InvokeKind,
        /*[in,out]*/ struct SearchResults * * StartResults,
        /*[in]*/ enum TliSearchTypes SearchType,
        /*[in]*/ VARIANT_BOOL Sort,
        /*[in]*/ VARIANT_BOOL ShowUnderscore,
        /*[out,retval]*/ struct SearchResults * * retVal ) = 0;
      virtual HRESULT __stdcall get_ITypeLib (
        /*[out,retval]*/ IUnknown * * retVal ) = 0;
      virtual HRESULT __stdcall putref_ITypeLib (
        /*[in]*/ IUnknown * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringDll (
        /*[in]*/ long LCID,
        /*[out,retval]*/ BSTR * retVal ) = 0;
      virtual HRESULT __stdcall get_HelpStringContext (
        /*[out,retval]*/ long * retVal ) = 0;
      virtual HRESULT __stdcall get_BestEquivalentType (
        /*[in]*/ BSTR TypeInfoName,
        /*[out,retval]*/ BSTR * retVal ) = 0;
};

//
// Wrapper method implementations
//

#include "c:\users\vincent\downloads\comet_1b31\src\tlb2h\debug\tlbinf32.tli"

} // namespace TLI

#pragma pack(pop)
